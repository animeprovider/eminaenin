var Fe=Object.create;var K=Object.defineProperty,Oe=Object.defineProperties,Be=Object.getOwnPropertyDescriptor,Pe=Object.getOwnPropertyDescriptors,Re=Object.getOwnPropertyNames,he=Object.getOwnPropertySymbols,qe=Object.getPrototypeOf,xe=Object.prototype.hasOwnProperty,Ve=Object.prototype.propertyIsEnumerable;var be=(l,e,t)=>e in l?K(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,_=(l,e)=>{for(var t in e||(e={}))xe.call(e,t)&&be(l,t,e[t]);if(he)for(var t of he(e))Ve.call(e,t)&&be(l,t,e[t]);return l},pe=(l,e)=>Oe(l,Pe(e)),Se=l=>K(l,"__esModule",{value:!0});var Me=(l,e)=>{for(var t in e)K(l,t,{get:e[t],enumerable:!0})},Ee=(l,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Re(e))!xe.call(l,n)&&(t||n!=="default")&&K(l,n,{get:()=>e[n],enumerable:!(r=Be(e,n))||r.enumerable});return l},H=(l,e)=>Ee(Se(K(l!=null?Fe(qe(l)):{},"default",!e&&l&&l.__esModule?{get:()=>l.default,enumerable:!0}:{value:l,enumerable:!0})),l),je=(l=>(e,t)=>l&&l.get(e)||(t=Ee(Se({}),e,1),l&&l.set(e,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var E=(l,e,t)=>new Promise((r,n)=>{var a=o=>{try{s(t.next(o))}catch(p){n(p)}},i=o=>{try{s(t.throw(o))}catch(p){n(p)}},s=o=>o.done?r(o.value):Promise.resolve(o.value).then(a,i);s((t=t.apply(l,e)).next())});var $e={};Me($e,{Deobfuscator:()=>ge,Transformer:()=>T});var ye=H(require("escodegen")),le=H(require("acorn"));function y(l,e){for(let t in e)l[t]=e[t];return!0}function Q(l){return[l.start,l.end].join("!")}var Ce=H(require("eslint-scope"));var T=class{constructor(e,t){this.name=e,this.options=this.buildOptions(t)}buildOptions(e){return _({},e)}};var de=require("acorn-walk");//! MIT License
//!
//! Copyright (C) 2012-2020 by various contributors (see AUTHORS)
//!
//! Permission is hereby granted, free of charge, to any person obtaining a copy
//! of this software and associated documentation files (the "Software"), to deal
//! in the Software without restriction, including without limitation the rights
//! to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//! copies of the Software, and to permit persons to whom the Software is
//! furnished to do so, subject to the following conditions:
//!
//! The above copyright notice and this permission notice shall be included in
//! all copies or substantial portions of the Software.
//!
//! THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//! IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//! THE SOFTWARE.
//!
//! ^ https://github.com/acornjs/acorn/blob/49ac049201/AUTHORS
//! ^ https://github.com/acornjs/acorn/blob/49ac049201/acorn-walk/src/index.js
function d(l,e,t,r,n){let a=[],i=t||de.base;return function s(o,p,u){let b=u||o.type,f=e[b],c=o!==a[a.length-1];if(c&&a.push(o),i[b](o,p,s),f)try{f(o,p||a,a)}catch(x){console.error(`Caught an error while attempting to run AST visitor!

node =`,o,`
err =`,x)}c&&a.pop()}(l,r,n),l}var ue=class{constructor(e){this.node=e}};function V(l,e,t,r){let n=r||de.base,a=e[0],i=e[1];try{(function s(o,p,u){let b=u||o.type;if((a==null||o.start<=a)&&(i==null||o.end>=i)&&n[b](o,{},s),(a==null||o.start===a)&&(i==null||o.end===i)&&o.type===t)throw new ue(o)})(l)}catch(s){if(s instanceof ue)return s.node;throw s}}function Te(l){return l.type==="PrivateIdentifier"}function A(l){return l.type==="Literal"}function v(l){return A(l)&&typeof l.value=="string"}function N(l){return A(l)&&typeof l.value=="number"}function D(l){return A(l)&&typeof l.value=="boolean"}function M(l){return l.type==="UnaryExpression"}function ce(l){return M(l)&&N(l.argument)}function q(l){return l.type==="ExpressionStatement"}function $(l){return l.type==="SequenceExpression"}function I(l){return l.type==="AssignmentExpression"}function L(l){return l.type==="ReturnStatement"}function G(l){return l.type==="VariableDeclaration"}function W(l){return l.type==="ArrayExpression"}function m(l){return l.type==="Identifier"}function C(l){return l.type==="FunctionExpression"}function we(l){return l.type==="UpdateExpression"}function O(l){return l.type==="CallExpression"}function S(l){return l.type==="BlockStatement"}function ve(l){return l.type==="SwitchStatement"}function fe(l){return l.type==="BinaryExpression"}function j(l){return l.type==="MemberExpression"}function U(l){return l.type==="IfStatement"}function Ne(l){return l.type==="ForStatement"}function ke(l){return l.type==="ObjectExpression"}function P(l){return JSON.parse(JSON.stringify(l))}function Ae(l){if(!A(l)&&!m(l))throw new TypeError("Node is not Literal or Identifier");return A(l)?l.value.toString():l.name}function R(l){return l.filter(e=>e.type!=="EmptyStatement")}var Z=class extends T{constructor(e){super("ControlFlow",e);this.findStorageNodeAliases=(e,t)=>(d(t,{BlockStatement(r){let n=Q(r);if(!e.controlFlowStorageNodes[n]||r.body.length===0)return;let a=e.controlFlowStorageNodes[n];d(r,{VariableDeclaration(i){let s=[];for(let o of i.declarations)!o.init||!m(o.id)||!m(o.init)||a.aliases.includes(o.init.name)&&(a.aliases.push(o.id.name),s.push(`${o.start}!${o.end}`));i.declarations=i.declarations.filter(o=>!s.includes(`${o.start}!${o.end}`)),i.declarations.length===0&&(i.type="EmptyStatement")}})}}),this);this.replacer=(e,t)=>{let{translateCallExp:r}=this;return d(t,{BlockStatement(n){let a=Q(n);if(!e.controlFlowStorageNodes[a])return;let i=e.controlFlowStorageNodes[a];d(n,{MemberExpression(s){if(!m(s.object)||!m(s.property)||!i.aliases.includes(s.object.name))return;let o=s.property.name,p=-1;(p=i.literals.findIndex(u=>u.identifier===o))!==-1&&y(s,{type:"Literal",value:i.literals[p].value})},CallExpression(s){if(!j(s.callee)||!m(s.callee.object)||!m(s.callee.property)||!i.aliases.includes(s.callee.object.name))return;let o=s.callee.property.name,p=-1;if((p=i.functions.findIndex(u=>u.identifier===o))!==-1){let u=i.functions[p].node;y(s,r(u,s))}}})}}),this}}translateCallExp(e,t){if(!L(e.body.body[0]))throw new TypeError("Function in CFSN was invalid (not a returnstatement)");if(!e.params.every(s=>m(s)))throw new TypeError("Function in CFSN was invalid (not ident params)");if(!e.body.body[0].argument)throw new TypeError("Function in CFSN was invalid (void return)");let r=e.params,n={},a=0;for(let s of r)n[s.name]=t.arguments[a],++a;let i=P(e.body.body[0].argument);return d(i,{Identifier(s){!n[s.name]||y(s,n[s.name])}}),i}populateEmptyObjects(e){return d(e.ast,{BlockStatement(t){d(t,{VariableDeclarator(r){if(!m(r.id)||!r.init||!ke(r.init)||r.init.properties.length!==0)return;let n=r.id.name;d(t,{ExpressionStatement(a){if(!I(a.expression))return;let i=a.expression;if(!j(i.left)||!m(i.left.object)||!m(i.left.property)||i.left.object.name!==n)return;let s={type:"Property",start:0,end:0,method:!1,shorthand:!1,computed:!1,key:i.left.property,value:i.right,kind:"init"};r.init.properties.push(s),a.type="EmptyStatement",e.log(`${n}.${i.left.property.name} = ${i.right.type}`)}})}})}}),this}findStorageNode(e){let{findStorageNodeAliases:t}=this;return d(e.ast,{BlockStatement(r){let n=Q(r);e.controlFlowStorageNodes[n]||r.body.length!==0&&d(r,{VariableDeclaration(a){var s;let i=[];for(let o of a.declarations){if(!m(o.id)||((s=o.init)==null?void 0:s.type)!=="ObjectExpression"||o.init.properties.length===0||!o.init.properties.every(u=>u.type!=="SpreadElement"&&["FunctionExpression","Literal"].includes(u.value.type)&&(u.key.type==="Literal"||u.key.type==="Identifier")&&Ae(u.key).length===5))continue;e.controlFlowStorageNodes[n]={identifier:o.id.name,aliases:[o.id.name],functions:[],literals:[]};let p=e.controlFlowStorageNodes[n];for(let u of o.init.properties){let b=u.key,f=m(b)?b.name:b.value,c=-1;if(A(u.value))(c=p.literals.findIndex(x=>x.identifier===f))!==-1?p.literals[c].value=u.value.value:p.literals.push({identifier:f,value:u.value.value});else if(C(u.value)){let x=R(u.value.body.body);if(x.length!==1||!L(x[0]))continue;let g=P(u.value);g.body.body=x,(c=p.functions.findIndex(w=>w.identifier===f))!==-1?p.functions[c].node=g:p.functions.push({identifier:f,node:g})}}e.log("Found control flow node id =",o.id.name,"#fn =",p.functions.length,"#lit =",p.literals.length),e.removeGarbage&&i.push(`${o.start}!${o.end}`)}a.declarations=a.declarations.filter(o=>!i.includes(`${o.start}!${o.end}`)),a.declarations.length===0&&(a.type="EmptyStatement"),t(e,r).replacer(e,r)}})}}),this}deflatten(e){return d(e.ast,{WhileStatement(t,r,n){if(!D(t.test)||t.test.value!==!0||!S(t.body)||t.body.body.length===0||!ve(t.body.body[0]))return;let a=n[n.length-2];if(!S(a))return;let i=t.body.body[0];if(!j(i.discriminant)||!m(i.discriminant.object)||!we(i.discriminant.property)||i.discriminant.property.operator!=="++"||i.discriminant.property.prefix!==!1||!m(i.discriminant.property.argument))return;let s=i.discriminant.object.name,o=i.discriminant.property.argument.name,p=[],u=-1;if(d(a,{VariableDeclaration(c){let x=[];for(let g of c.declarations)if(!!m(g.id)&&!!g.init)if(g.id.name===s){if(!O(g.init)||!j(g.init.callee)||!v(g.init.callee.object)||!m(g.init.callee.property)||g.init.callee.property.name!=="split"||!v(g.init.arguments[0]))continue;let w=g.init.callee.object.value,h=g.init.arguments[0].value;p=w.split(h),x.push(`${g.start}!${g.end}`)}else if(g.id.name===o){if(!N(g.init))continue;u=g.init.value,x.push(`${g.start}!${g.end}`)}else continue;c.declarations=c.declarations.filter(g=>!x.includes(`${g.start}!${g.end}`)),c.declarations.length===0&&(c.type="EmptyStatement")}}),p.length===0||u===-1)return;let b=[];for(let c=u;c<p.length;c++){let x=p[c],g=i.cases.find(w=>w.test&&A(w.test)&&w.test.value===x);if(!g)return;b.push(g.consequent.filter(w=>w.type!=="ContinueStatement"))}let f=a.body.findIndex(c=>c.type===t.type&&c.start===t.start&&c.end===t.end);a.body.splice(f,1,...b.flat()),e.log("Found flattened control flow arr =",p,"idx =",u)}}),this}transform(e){return E(this,null,function*(){this.populateEmptyObjects(e).findStorageNode(e).deflatten(e)})}};var ee=class extends T{constructor(e){super("Desequence",e)}desequence(e){function t(r){for(let n of r.body)if(q(n)&&$(n.expression)){let a=r.body.findIndex(s=>s.start===n.start&&s.end===n.end),i=n.expression.expressions.map(s=>({type:"ExpressionStatement",expression:s}));r.body[a]=i}y(r,{body:r.body.flat()})}return d(e,{BlockStatement(r){t(r)},Program(r){t(r)}}),this}transform(e){return E(this,null,function*(){this.desequence(e.ast)})}};var te=class extends T{constructor(e){super("LiteralMap",e)}demap(e){return d(e.ast,{BlockStatement(t){let r={};d(t,{VariableDeclaration(n){let a=[];for(let i of n.declarations){if(!i.init||i.init.type!=="ObjectExpression"||!m(i.id)||i.init.properties.length===0||!i.init.properties.every(o=>o.type!=="SpreadElement"&&(A(o.key)||m(o.key))&&A(o.value)))continue;let s=i.id.name;r[s]=r[s]||{};for(let o of i.init.properties){let p=o,u=p.key.type==="Identifier"?p.key.name:p.key.value;r[s][u]=p.value.value}e.removeGarbage&&a.push(`${i.start}!${i.end}`)}n.declarations=n.declarations.filter(i=>!a.includes(`${i.start}!${i.end}`))}}),d(t,{MemberExpression(n){if(!m(n.object)||!A(n.property)&&!m(n.property))return;let a=r[n.object.name];if(!a)return;let i=m(n.property)?n.property.name:n.property.value,s=a[i];typeof s!="undefined"&&y(n,{type:"Literal",value:s})}})}}),this}literals(e){function t(r){var a;let n=e.scopeManager.acquire(r);if(!!n)for(let i of n.variables){if(i.name==="arguments"||i.identifiers.length!==1||i.defs.length!==1||i.defs[0].type!=="Variable")continue;let s=i.defs[0].node;if(((a=s.init)==null?void 0:a.type)==="Literal"&&!(typeof s.init.value=="string"&&s.init.value.length===65)&&!!i.references.every(o=>o.init||o.isReadOnly()))for(let o of i.references){if(o.init){let u=i.defs[0],b=u.node,f=u.parent;f.type==="VariableDeclaration"&&(f.declarations=f.declarations.filter(c=>c.start!==b.start&&c.end!==b.end));continue}let p=V(r,o.identifier.range,"Identifier");!p||y(p,s.init)}}}return d(e.ast,{FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t}),this}transform(e){return E(this,null,function*(){this.demap(e).literals(e)})}};var Ue=/^[a-z][\w]*$/i,re=class extends T{constructor(e){super("MemberExpressionCleaner",e)}clean(e){return d(e,{MemberExpression(t){Te(t.property)||!v(t.property)||!t.property.value.match(Ue)||(t.computed=!1,y(t.property,{type:"Identifier",name:t.property.value}))}}),this}transform(e){return E(this,null,function*(){this.clean(e.ast)})}};function J(l,e=!1){if(l.argument.type!=="Literal")throw new TypeError("UnaryExpression argument is not Literal");if(typeof l.argument.value!="number"&&!e)throw new TypeError("UnaryExpression argument value is not number");let t=e?parseInt(l.argument.value):l.argument.value;return l.operator==="-"&&(t=t*-1),t}function X(l,e=!1){if(N(l))return l.value;if(v(l)&&e)return parseInt(l.value);if(M(l))return J(l,e);throw new TypeError("Couldn't translate node to Number")}function Ge(l,e,t){switch(e){case"+":return l+t;case"*":return l*t;case"-":return l-t;case"/":return l/t;default:return l}}var z=class extends T{constructor(e){super("Simplify",e);this.ALLOWED_MATH_OPERS=["+","-","*","/"];this.ALLOWED_COMPARISON_OPERS=["==","===","!=","!==",">","<","<=",">="]}negativeString(e){return d(e.ast,{UnaryExpression(t){t.argument.type==="Literal"&&typeof t.argument.value=="string"&&t.argument.value.startsWith("0x")&&t.operator==="-"&&y(t,{type:"Literal",value:J(t,!0)})}}),this}binEval(e,t,r){switch(t){case"==":return e==r;case"===":return e===r;case"!=":return e!=r;case"!==":return e!==r;case">":return e>r;case"<":return e<r;case"<=":return e<=r;case">=":return e>=r}throw new TypeError(`Operator ${t} is invalid`)}stringConcat(e){return d(e.ast,{BinaryExpression(t){v(t.left)&&v(t.right)&&t.operator==="+"&&y(t,{type:"Literal",value:t.left.value+t.right.value})}}),this}math(e){let{ALLOWED_MATH_OPERS:t}=this;return d(e,{BinaryExpression(r){if(!!t.includes(r.operator)&&(ce(r.left)&&y(r.left,{type:"Literal",value:J(r.left)}),ce(r.right)&&y(r.right,{type:"Literal",value:J(r.right)}),N(r.left)&&N(r.right))){let n=Ge(r.left.value,r.operator,r.right.value);if(isNaN(n))return;y(r,{type:"Literal",value:n})}}}),this}truthyFalsy(e){return d(e.ast,{UnaryExpression(t){t.operator==="!"&&(!W(t.argument)||t.argument.elements.length===0&&y(t,{type:"Literal",value:!1}))}}),d(e.ast,{UnaryExpression(t){if(t.operator==="!"){if(D(t.argument))return y(t,{type:"Literal",value:!t.argument.value});if(N(t.argument)){if(![0,1].includes(t.argument.value))return;y(t,{type:"Literal",value:!t.argument.value})}}}}),this}literalComparison(e){let{ALLOWED_COMPARISON_OPERS:t,binEval:r}=this;return d(e.ast,{BinaryExpression(n){if(!N(n.left)&&!v(n.left)||!N(n.right)&&!v(n.right)||!t.includes(n.operator))return;let a=r(n.left.value,n.operator,n.right.value);y(n,{type:"Literal",value:a})}}),this}singleToBlock(e){return d(e.ast,{ForStatement(t){S(t.body)||y(t.body,{type:"BlockStatement",body:[P(t.body)]})},WhileStatement(t){S(t.body)||y(t.body,{type:"BlockStatement",body:[P(t.body)]})},IfStatement(t){S(t.consequent)||y(t.consequent,{type:"BlockStatement",body:[P(t.consequent)]}),t.alternate&&!S(t.alternate)&&y(t.alternate,{type:"BlockStatement",body:[P(t.alternate)]})}}),this}conditionalExpression(e){return d(e.ast,{ConditionalExpression(t,r,n){if(!!D(t.test)){if(!t.test.value){t.test.value=!0;let a=t.consequent;t.consequent=t.alternate,t.alternate=a}y(t.alternate,{type:"Identifier",name:"undefined"}),y(t,t.consequent)}}}),this}fixup(e){return d(e.ast,{Literal(t){!N(t)||t.value>=0||y(t,{type:"UnaryExpression",operator:"-",prefix:!0,argument:{type:"Literal",value:Math.abs(t.value)}})}}),this}transform(e){return E(this,null,function*(){this.negativeString(e).stringConcat(e).math(e.ast).truthyFalsy(e).literalComparison(e).conditionalExpression(e).singleToBlock(e).fixup(e)})}};var ie=class extends T{constructor(e){super("StringDecoder",e);this.util_decode=(e,t,r)=>{let n,a=0,i=0,s=1,o=-1,p=f=>f.identifier===t;if(e.stringDecoders.findIndex(p)!==-1)n=e.stringDecoders.find(p);else if((o=e.stringDecoderReferences.findIndex(p))!==-1){let f=e.stringDecoderReferences[o];a+=f.additionalOffset;let c=f;for(t=f.realIdentifier;c;)c=e.stringDecoderReferences.find(p),c&&(a+=c.additionalOffset,t=c.realIdentifier);n=e.stringDecoders.find(p),typeof f.indexArgument=="number"&&(i=f.indexArgument),typeof f.keyArgument=="number"&&(s=f.keyArgument)}else throw new TypeError(`Failed to decode ${t}, no decoder`);a+=n.offset;let u=typeof r[i]=="string"?parseInt(r[i]):r[i],b="";switch(n.type){case 0:return this.decodeSimple(e,u,a);case 1:return this.decodeBase64(e,t,u,a);case 2:return b=r[s],this.decodeRC4(e,t,u,b,a);default:throw new TypeError("Invalid decoder function type")}}}literals_to_arg_array(e){return e.map(t=>M(t)?X(t,!0):A(t)?t.value:void 0)}util_b64_decode(e,t){let r="",n="";for(let a=0,i=0,s,o=0;s=t.charAt(o++);~s&&(i=a%4?i*64+s:s,a++%4)?r+=String.fromCharCode(255&i>>(-2*a&6)):0)s=e.indexOf(s);for(let a=0,i=r.length;a<i;a++)n+="%"+("00"+r.charCodeAt(a).toString(16)).slice(-2);return decodeURIComponent(n)}util_rc4_decode(e,t,r){let n=[],a=0,i,s="";t=this.util_b64_decode(e,t);let o;for(o=0;o<256;o++)n[o]=o;for(o=0;o<256;o++)a=(a+n[o]+r.charCodeAt(o%r.length))%256,i=n[o],n[o]=n[a],n[a]=i;o=0,a=0;for(let p=0;p<t.length;p++)o=(o+1)%256,a=(a+n[o])%256,i=n[o],n[o]=n[a],n[a]=i,s+=String.fromCharCode(t.charCodeAt(p)^n[(n[o]+n[a])%256]);return s}decodeSimple(e,t,r){return e.stringArray[t+r]}decodeBase64(e,t,r,n){let a=e.stringArray[r+n],i=e.stringDecoders.find(s=>s.identifier===t&&s.type===1).charset;return this.util_b64_decode(i,a)}decodeRC4(e,t,r,n,a){let i=e.stringArray[r+a],s=e.stringDecoders.find(o=>o.identifier===t&&o.type===2).charset;return this.util_rc4_decode(s,i,n)}stringsFinder(e){return e.stringArray.length>0?this:(e.stringArray.length===0&&e.stringArrayIdentifier&&d(e.ast,{VariableDeclaration(t,r,n){let a=[];for(let i of t.declarations)!m(i.id)||!i.init||!W(i.init)||i.id.name===e.stringArrayIdentifier&&(!i.init.elements.every(s=>v(s))||(e.stringArray=i.init.elements.map(s=>s.value),e.log("Found string array at",i.id.name,"#",e.stringArray.length),a.push(`${i.start}!${i.end}`)));t.declarations=t.declarations.filter(i=>!a.includes(`${i.start}!${i.end}`))}}),d(e.ast,{FunctionDeclaration(t){var s,o,p;let r=t.body;if(r.body.length!==3||!G(r.body[0])||!q(r.body[1])||!L(r.body[2])||!m(r.body[0].declarations[0].id)||!r.body[0].declarations[0].init||((s=r.body[0].declarations[0].init)==null?void 0:s.type)!=="ArrayExpression")return;let n=(o=t.id)==null?void 0:o.name,a=r.body[0].declarations[0].id.name,i=r.body[0].declarations[0].init;!I(r.body[1].expression)||!m(r.body[1].expression.left)||r.body[1].expression.left.name!==n||!C(r.body[1].expression.right)||!L(r.body[1].expression.right.body.body[0])||((p=r.body[1].expression.right.body.body[0].argument)==null?void 0:p.type)!=="Identifier"||r.body[1].expression.right.body.body[0].argument.name!==a||!i.elements.every(u=>v(u))||(e.stringArray=i.elements.map(u=>u.value),e.stringArrayIdentifier=n,e.removeGarbage&&(t.type="EmptyStatement"),e.log("Found string array at",n,"#",e.stringArray.length))}}),this)}funcFinder(e){return d(e.ast,{FunctionDeclaration(t){var b,f,c,x;if(!t.id)return;let r=t.body,n=t.id.name;if(r.body.length>3&&r.body.length<1||!G(r.body[0])&&r.body.length!==1)return;let a=r.body[r.body.length-1];if(!L(a)||!a.argument)return;let i,s;if(a.argument.type==="SequenceExpression"){if(!L(a)||((b=a.argument)==null?void 0:b.type)!=="SequenceExpression"||a.argument.expressions.length!==2||!I(a.argument.expressions[0])||!O(a.argument.expressions[1]))return;s=a.argument.expressions[0]}else if(a.argument.type==="CallExpression"){if(!m(a.argument.callee)||a.argument.callee.name!==n||!q(r.body[1])||!I(r.body[1].expression))return;s=r.body[1].expression}if(!s||!m(s.left)||s.left.name!==n||!C(s.right)||(i=s.right,r.body.length!==1&&G(r.body[0])&&(((f=r.body[0].declarations[0].init)==null?void 0:f.type)!=="CallExpression"||r.body[0].declarations[0].init.callee.type!=="Identifier"||r.body[0].declarations[0].init.callee.name!==e.stringArrayIdentifier)))return;let o=i.body.body;if(r.body.length===1){if(!G(o[1])||((c=o[1].declarations[0].init)==null?void 0:c.type)!=="MemberExpression"||!m(o[1].declarations[0].init.object)||!m(o[1].declarations[0].init.property))return;e.stringArrayIdentifier=o[1].declarations[0].init.object.name}let p=0;if(!q(o[0])||!I(o[0].expression)||!fe(o[0].expression.right)||!A(o[0].expression.right.right)&&!M(o[0].expression.right.right))return;p=X(o[0].expression.right.right),o[0].expression.right.operator==="-"&&(p=p*-1);let u={identifier:t.id.name,offset:p,type:0,indexArgument:0,keyArgument:1};if(o.length>=3&&U(o[2])){if(S(o[2].consequent)&&o[2].consequent.body.length===2&&G(o[2].consequent.body[0])&&C(o[2].consequent.body[0].declarations[0].init)){let g=o[2].consequent.body[0].declarations[0].init,w=g.body.body;if(G(w[0])&&v(w[0].declarations[0].init)){let h=w[0].declarations[0].init.value;h.length===65&&(u.type=1,u.charset=h)}}else if(S(o[2].consequent)&&o[2].consequent.body.length>=3&&G(o[2].consequent.body[0])&&C(o[2].consequent.body[0].declarations[0].init)&&G(o[2].consequent.body[1])&&C(o[2].consequent.body[1].declarations[0].init)){let g=o[2].consequent.body[0].declarations[0].init,w=g.body.body;if(G(w[0])&&v(w[0].declarations[0].init)){let h=w[0].declarations[0].init.value;h.length===65&&(u.type=2,u.charset=h)}}}e.stringDecoders.push(u),e.removeGarbage&&(t.type="EmptyStatement"),e.log("Found decoder function",(x=t.id)==null?void 0:x.name,"offset =",p,"type =",u.type)}}),this}shiftFinder(e){let{util_decode:t,literals_to_arg_array:r}=this;function n(a){if(!O(a)||a.callee.type!=="FunctionExpression")return!1;let i=a.callee.body.body,s=[...i].reverse();if(i.length<2)return;let o;if(s[0].type==="ForStatement"){if(!S(s[0].body))return;o=R(s[0].body.body)}else if(s[0].type==="WhileStatement"){if(!S(s[0].body))return;o=R(s[0].body.body)}else return;if(o.length!==1||o[0].type!=="TryStatement"||R(o[0].block.body).length!==2)return;let p=R(o[0].block.body);if(a.arguments[1].type!=="Literal")return;let u=a.arguments[1].value,b;if(p[0].type==="VariableDeclaration"){if(!p[0].declarations[0].init)return;b=p[0].declarations[0].init}else if(p[0].type==="IfStatement"){if(!fe(p[0].test)||p[0].test.operator!=="==="||!N(p[0].test.left)||p[0].test.left.value!==u)return;b=p[0].test.right}else return;if(b.type!=="BinaryExpression")return;let f=new z({}),c=e.stringArray.length*2,x=0;for(;;){if(x++,x>c)throw new Error(`Push/shift calculation failed (iter=${x}>maxLoops=${c})`);let g=P(b),w=!1;if(e.stringArray.push(e.stringArray.shift()),d(g,{CallExpression(h){if(!m(h.callee)||h.callee.name!=="parseInt"||h.arguments.length!==1||h.arguments[0].type!=="CallExpression"||h.arguments[0].callee.type!=="Identifier"||h.arguments[0].arguments.length===0||h.arguments[0].arguments.length>5||h.arguments[0].arguments[0].type!=="Literal"&&h.arguments[0].arguments[0].type!=="UnaryExpression")return;let k=-1;try{let F=r(h.arguments[0].arguments);k=parseInt(t(e,h.arguments[0].callee.name,F))}catch(F){throw F}isNaN(k)?(y(h,{type:"Identifier",name:"NaN"}),w=!0):y(h,{type:"Literal",value:k})}}),!w&&(f.math(g),g.type==="Literal"&&g.value===u))break}return e.log("Found push/shift IIFE breakCond =",u),!!e.removeGarbage}return d(e.ast,{ExpressionStatement(a){if($(a.expression)){let i=[];for(let s of a.expression.expressions)n(s)&&i.push(`${s.start}!${s.end}`);i&&(a.expression.expressions=a.expression.expressions.filter(s=>!i.includes(`${s.start}!${s.end}`)))}else n(a.expression)&&(a.type="EmptyStatement")}}),this}varReferenceFinder(e){let t=0;return d(e.ast,{VariableDeclaration(r){var a;let n=[];for(let i of r.declarations){if(((a=i.init)==null?void 0:a.type)!=="Identifier"||i.id.type!=="Identifier")continue;let s=i.id.name,o=i.init.name,p=e.stringDecoders.find(u=>u.identifier===o);!p&&(p=e.stringDecoderReferences.find(u=>u.identifier===o),!p)||(e.log("Found variable reference",s,o),e.stringDecoderReferences.push({identifier:s,realIdentifier:o,additionalOffset:0}),t++,e.removeGarbage&&n.push(`${i.start}!${i.end}`))}r.declarations=r.declarations.filter(i=>!n.includes(`${i.start}!${i.end}`)),r.declarations.length===0&&(r.type="EmptyStatement")}}),t}fnReferenceFinder(e){let t=0;return d(e.ast,{FunctionDeclaration(r){let n=R(r.body.body);if(!r.id||n.length!==1||!L(n[0])||!r.params.every(h=>m(h))||!n[0].argument||!O(n[0].argument)||!m(n[0].argument.callee))return;let a=r.id.name,i=n[0],s=n[0].argument,o=s.callee.name,p=0,u=0,b=-1,f=-1,c={identifier:"",indexArgument:-1,keyArgument:-1},x=e.stringDecoders.find(h=>h.identifier===o);if(x)c.identifier=x.identifier,c.indexArgument=x.indexArgument,c.keyArgument=x.keyArgument;else{let h=e.stringDecoderReferences.find(k=>k.identifier===o);if(!h)return;c.identifier=h.identifier,c.indexArgument=h.indexArgument,c.keyArgument=h.keyArgument}let g=r.params.map(h=>h.name),w=s.arguments;for(let h of w)d(h,{Identifier(k){!g.includes(k.name)||(p===c.indexArgument?b=g.indexOf(k.name):p===c.keyArgument&&(f=g.indexOf(k.name)))},BinaryExpression(k){let F=NaN;p===c.indexArgument&&(M(k.left)||N(k.left)||v(k.left)?F=X(k.left,!0):(M(k.right)||N(k.right)||v(k.right))&&(F=X(k.right,!0)),!isNaN(F)&&(k.operator==="-"&&(F=F*-1),u=F))}}),++p;e.stringDecoderReferences.find(h=>h.identifier===a)||(e.stringDecoderReferences.push({identifier:a,realIdentifier:c.identifier,additionalOffset:u,indexArgument:b,keyArgument:f}),t++,e.removeGarbage&&(r.type="EmptyStatement"),e.log("Found func ref id =",a,"offset =",u,"index =",b,"key =",f,"parent =",c.identifier))}}),t}decoder(e){let{util_decode:t,literals_to_arg_array:r}=this;return d(e.ast,{CallExpression(n){if(n.callee.type!=="Identifier"||n.arguments.length===0||n.arguments.length>5||n.arguments[0].type==="SpreadElement"||n.arguments[0].type!=="Literal"&&n.arguments[0].type!=="UnaryExpression")return;let a=n.callee.name;if(a!=="parseInt")try{let i=r(n.arguments),s=t(e,a,i);y(n,{type:"Literal",value:s})}catch(i){if(i.toString().includes("no decoder"))return;throw i}}}),this}transform(e){return E(this,null,function*(){for(this.stringsFinder(e).funcFinder(e).stringsFinder(e);this.varReferenceFinder(e)>0;)e.log("Searching for more variable references");for(;this.fnReferenceFinder(e)>0;)e.log("Searching for more function references");this.shiftFinder(e).decoder(e)})}};var ne=class extends T{constructor(e){super("DeadCode",e)}flipIfStatements(e){return d(e.ast,{IfStatement(t){if(!t.alternate||!D(t.test)||t.test.value!==!1||U(t.alternate)&&(!D(t.alternate.test)||t.alternate.test.value!==!0||t.alternate.alternate))return;let r=t.consequent,n=U(t.alternate)?t.alternate.consequent:t.alternate;t.test.value=!t.test.value,y(t,{consequent:n,alternate:r})}}),this}removeDeadAlternates(e){return d(e.ast,{IfStatement(t){!t.alternate||!D(t.test)||t.test.value!==!0||U(t.alternate)||delete t.alternate}}),this}fixIfStatements(e){return d(e.ast,{IfStatement(t,r,n){if(t.alternate||!D(t.test)||t.test.value!==!0)return;let a=n[n.length-2];if(!S(a)||!S(t.consequent))return;let i=a.body.findIndex(s=>s.type===t.type&&s.start===t.start&&s.end===t.end);a.body.splice(i,1,...t.consequent.body)}}),this}removeDead(e){return d(e.ast,{IfStatement(t,r,n){let a=n[n.length-2];if(!S(a)||!D(t.test)||t.test.value||t.alternate)return;let i=a.body.findIndex(s=>s.type===t.type&&s.start===t.start&&s.end===t.end);a.body.splice(i,1)}}),d(e.ast,{WhileStatement(t,r,n){let a=n[n.length-2];if(!S(a)||!D(t.test)||t.test.value)return;let i=a.body.findIndex(s=>s.type===t.type&&s.start===t.start&&s.end===t.end);a.body.splice(i,1)}}),this}removeDeadVariables(e){function t(r){let n=e.scopeManager.acquire(r);if(!!n){for(let a of n.variables)if(a.name!=="arguments"&&a.identifiers.length===1&&a.defs.length===1&&a.defs[0].type==="Variable"&&a.references.length===0){let i=a.defs[0],s=i.node,o=V(r,i.parent.range,"VariableDeclaration");if(!o)continue;o.declarations=o.declarations.filter(p=>p.start!==s.start&&p.end!==s.end),e.log("Removed dead variable",a.name)}}}return d(e.ast,{FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t}),this}transform(e){return E(this,null,function*(){this.flipIfStatements(e).removeDeadAlternates(e).fixIfStatements(e).removeDead(e).removeDeadVariables(e)})}};var ae=class extends T{constructor(e){super("Demangle",e)}demangleProxies(e){function t(r){if(!S(r.body)||r.body.body.length!==2)return;let n=r.body.body;if(!L(n[n.length-1]))return;let a=n[n.length-1];if(!a.argument)return;let i,s;if($(a.argument)){if(!I(a.argument.expressions[0])||!O(a.argument.expressions[1]))return;i=a.argument.expressions[0],s=a.argument.expressions[1]}else if(O(a.argument)){if(!I(a.argument.callee))return;i=a.argument.callee,s=a.argument}else return;if(!m(i.left)||!C(i.right))return;let o=[n[0],{type:"ExpressionStatement",expression:i},{type:"ReturnStatement",argument:{type:"CallExpression",callee:{type:"Identifier",name:i.left.name},arguments:s.arguments}}];y(r.body,{body:o})}return d(e.ast,{FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t}),this}demangleStringFuncs(e){function t(r){if(!S(r.body)||!r.id||r.body.body.length!==3)return;let n=r.body.body;if(!q(n[1])||!I(n[1].expression)||!m(n[1].expression.left)||n[1].expression.left.name!==r.id.name||!C(n[1].expression.right))return;let a=n[1].expression.right,i=a.body.body,s=[];if(!G(i[0])||i[0].declarations.length!==1||!i[0].declarations[0].init||!j(i[0].declarations[0].init)||!I(i[0].declarations[0].init.property)||!m(i[0].declarations[0].init.property.left)||!N(i[0].declarations[0].init.property.right)||i[0].declarations[0].init.property.operator!=="-=")return;let o=i[0].declarations[0].init.property.left.name,p=i[0].declarations[0].init.property.right.value;if(s.push({type:"ExpressionStatement",expression:{type:"AssignmentExpression",operator:"=",left:{type:"Identifier",name:o},right:{type:"BinaryExpression",operator:"-",left:{type:"Identifier",name:o},right:{type:"Literal",value:p}}}}),y(i[0].declarations[0].init.property,{type:"Identifier",name:o}),s=[...s,...i],i.length>=3&&U(s[2])){let u=s[2];if(S(u.consequent)&&u.consequent.body.length>1){if(G(u.consequent.body[0])&&u.consequent.body[0].declarations.length>0&&u.consequent.body[0].declarations[0].init&&C(u.consequent.body[0].declarations[0].init)){let b=u.consequent.body[0].declarations[0].init,f=b.body.body;if(f.length>1&&Ne(f[0])&&S(f[0].body)&&q(f[0].body.body[0])&&I(f[0].body.body[0].expression)&&O(f[0].body.body[0].expression.right)&&j(f[0].body.body[0].expression.right.callee)){if(f[0].init&&G(f[0].init)){if(f[0].init.declarations[0].init&&v(f[0].init.declarations[0].init)){let c=f[0].init.declarations[0].init.value;c.length===65&&f.splice(0,0,{type:"VariableDeclaration",kind:"const",start:0,end:0,declarations:[{type:"VariableDeclarator",id:{type:"Identifier",name:"charset"},init:{type:"Literal",value:c},start:0,end:0}]})}}else if(v(f[0].body.body[0].expression.right.callee.object)&&m(f[0].body.body[0].expression.right.callee.property)&&f[0].body.body[0].expression.right.callee.property.name==="indexOf"){let c=f[0].body.body[0].expression.right.callee.object.value;c.length===65&&f.splice(0,0,{type:"VariableDeclaration",kind:"const",start:0,end:0,declarations:[{type:"VariableDeclarator",id:{type:"Identifier",name:"charset"},init:{type:"Literal",value:c},start:0,end:0}]})}}}G(u.consequent.body[0])&&u.consequent.body[0].declarations.length===2&&u.consequent.body.splice(1,0,{type:"VariableDeclaration",start:0,end:0,kind:u.consequent.body[0].kind,declarations:[u.consequent.body[0].declarations[1]]})}}y(a.body,{body:s})}return d(e.ast,{FunctionDeclaration:t}),this}transform(e){return E(this,null,function*(){this.demangleProxies(e).demangleStringFuncs(e)})}};var oe=class extends T{constructor(e){super("ArrayMap",e)}demap(e){function t(r){if(!S(r.body))return;let n=R(r.body.body);if(!G(n[0]))return;let a=n[0];if(a.declarations.length!==1)return;let i=a.declarations[0];if(!i.init||!W(i.init)||i.init.elements[0]!==null||!m(i.id))return;let s=i.id.name,o=i.init.elements.map(p=>p&&A(p)?p.value:p);d(r,{MemberExpression(p){if(!m(p.object)||!N(p.property)||p.object.name!==s||p.property.value>=o.length)return;let b=o[p.property.value];y(p,{type:"Literal",value:b})}}),r.body.body=r.body.body.filter(p=>p.start!==a.start&&p.end!==a.end)}return d(e.ast,{FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t}),this}transform(e){return E(this,null,function*(){this.demap(e)})}};var De=H(require("mersenne-twister"));var me=["ability","able","aboard","about","above","accept","accident","according","account","accurate","acres","across","act","action","active","activity","actual","actually","add","addition","additional","adjective","adult","adventure","advice","affect","afraid","after","afternoon","again","against","age","ago","agree","ahead","aid","air","airplane","alike","alive","all","allow","almost","alone","along","aloud","alphabet","already","also","although","am","among","amount","ancient","angle","angry","animal","announced","another","answer","ants","any","anybody","anyone","anything","anyway","anywhere","apart","apartment","appearance","apple","applied","appropriate","are","area","arm","army","around","arrange","arrangement","arrive","arrow","art","article","as","aside","ask","asleep","at","ate","atmosphere","atom","atomic","attached","attack","attempt","attention","audience","author","automobile","available","average","avoid","aware","away","baby","back","bad","badly","bag","balance","ball","balloon","band","bank","bar","bare","bark","barn","base","baseball","basic","basis","basket","bat","battle","be","bean","bear","beat","beautiful","beauty","became","because","become","becoming","bee","been","before","began","beginning","begun","behavior","behind","being","believed","bell","belong","below","belt","bend","beneath","bent","beside","best","bet","better","between","beyond","bicycle","bigger","biggest","bill","birds","birth","birthday","bit","bite","black","blank","blanket","blew","blind","block","blood","blow","blue","board","boat","body","bone","book","border","born","both","bottle","bottom","bound","bow","bowl","box","boy","brain","branch","brass","brave","bread","break","breakfast","breath","breathe","breathing","breeze","brick","bridge","brief","bright","bring","broad","broke","broken","brother","brought","brown","brush","buffalo","build","building","built","buried","burn","burst","bus","bush","business","busy","but","butter","buy","by","cabin","cage","cake","call","calm","came","camera","camp","can","canal","cannot","cap","capital","captain","captured","car","carbon","card","care","careful","carefully","carried","carry","case","cast","castle","cat","catch","cattle","caught","cause","cave","cell","cent","center","central","century","certain","certainly","chain","chair","chamber","chance","change","changing","chapter","character","characteristic","charge","chart","check","cheese","chemical","chest","chicken","chief","child","children","choice","choose","chose","chosen","church","circle","circus","citizen","city","class","classroom","claws","clay","clean","clear","clearly","climate","climb","clock","close","closely","closer","cloth","clothes","clothing","cloud","club","coach","coal","coast","coat","coffee","cold","collect","college","colony","color","column","combination","combine","come","comfortable","coming","command","common","community","company","compare","compass","complete","completely","complex","composed","composition","compound","concerned","condition","congress","connected","consider","consist","consonant","constantly","construction","contain","continent","continued","contrast","control","conversation","cook","cookies","cool","copper","copy","corn","corner","correct","correctly","cost","cotton","could","count","country","couple","courage","course","court","cover","cow","cowboy","crack","cream","create","creature","crew","crop","cross","crowd","cry","cup","curious","current","curve","customs","cut","cutting","daily","damage","dance","danger","dangerous","dark","darkness","date","daughter","dawn","day","dead","deal","dear","death","decide","declared","deep","deeply","deer","definition","degree","depend","depth","describe","desert","design","desk","detail","determine","develop","development","diagram","diameter","did","die","differ","difference","different","difficult","difficulty","dig","dinner","direct","direction","directly","dirt","dirty","disappear","discover","discovery","discuss","discussion","disease","dish","distance","distant","divide","division","do","doctor","does","dog","doing","doll","dollar","done","donkey","door","dot","double","doubt","down","dozen","draw","drawn","dream","dress","drew","dried","drink","drive","driven","driver","driving","drop","dropped","drove","dry","duck","due","dug","dull","during","dust","duty","each","eager","ear","earlier","early","earn","earth","easier","easily","east","easy","eat","eaten","edge","education","effect","effort","egg","eight","either","electric","electricity","element","elephant","eleven","else","empty","end","enemy","energy","engine","engineer","enjoy","enough","enter","entire","entirely","environment","equal","equally","equator","equipment","escape","especially","essential","establish","even","evening","event","eventually","ever","every","everybody","everyone","everything","everywhere","evidence","exact","exactly","examine","example","excellent","except","exchange","excited","excitement","exciting","exclaimed","exercise","exist","expect","experience","experiment","explain","explanation","explore","express","expression","extra","eye","face","facing","fact","factor","factory","failed","fair","fairly","fall","fallen","familiar","family","famous","far","farm","farmer","farther","fast","fastened","faster","fat","father","favorite","fear","feathers","feature","fed","feed","feel","feet","fell","fellow","felt","fence","few","fewer","field","fierce","fifteen","fifth","fifty","fight","fighting","figure","fill","film","final","finally","find","fine","finest","finger","finish","fire","fireplace","firm","first","fish","five","fix","flag","flame","flat","flew","flies","flight","floating","floor","flow","flower","fly","fog","folks","follow","food","foot","football","for","force","foreign","forest","forget","forgot","forgotten","form","former","fort","forth","forty","forward","fought","found","four","fourth","fox","frame","free","freedom","frequently","fresh","friend","friendly","frighten","frog","from","front","frozen","fruit","fuel","full","fully","fun","function","funny","fur","furniture","further","future","gain","game","garage","garden","gas","gasoline","gate","gather","gave","general","generally","gentle","gently","get","getting","giant","gift","girl","give","given","giving","glad","glass","globe","go","goes","gold","golden","gone","good","goose","got","government","grabbed","grade","gradually","grain","grandfather","grandmother","graph","grass","gravity","gray","great","greater","greatest","greatly","green","grew","ground","group","grow","grown","growth","guard","guess","guide","gulf","gun","habit","had","hair","half","halfway","hall","hand","handle","handsome","hang","happen","happened","happily","happy","harbor","hard","harder","hardly","has","hat","have","having","hay","he","headed","heading","health","heard","hearing","heart","heat","heavy","height","held","hello","help","helpful","her","herd","here","herself","hidden","hide","high","higher","highest","highway","hill","him","himself","his","history","hit","hold","hole","hollow","home","honor","hope","horn","horse","hospital","hot","hour","house","how","however","huge","human","hundred","hung","hungry","hunt","hunter","hurried","hurry","hurt","husband","ice","idea","identity","if","ill","image","imagine","immediately","importance","important","impossible","improve","in","inch","include","including","income","increase","indeed","independent","indicate","individual","industrial","industry","influence","information","inside","instance","instant","instead","instrument","interest","interior","into","introduced","invented","involved","iron","is","island","it","its","itself","jack","jar","jet","job","join","joined","journey","joy","judge","jump","jungle","just","keep","kept","key","kids","kill","kind","kitchen","knew","knife","know","knowledge","known","label","labor","lack","lady","laid","lake","lamp","land","language","large","larger","largest","last","late","later","laugh","law","lay","layers","lead","leader","leaf","learn","least","leather","leave","leaving","led","left","leg","length","lesson","let","letter","level","library","lie","life","lift","light","like","likely","limited","line","lion","lips","liquid","list","listen","little","live","living","load","local","locate","location","log","lonely","long","longer","look","loose","lose","loss","lost","lot","loud","love","lovely","low","lower","luck","lucky","lunch","lungs","lying","machine","machinery","mad","made","magic","magnet","mail","main","mainly","major","make","making","man","managed","manner","manufacturing","many","map","mark","market","married","mass","massage","master","material","mathematics","matter","may","maybe","me","meal","mean","means","meant","measure","meat","medicine","meet","melted","member","memory","men","mental","merely","met","metal","method","mice","middle","might","mighty","mile","military","milk","mill","mind","mine","minerals","minute","mirror","missing","mission","mistake","mix","mixture","model","modern","molecular","moment","money","monkey","month","mood","moon","more","morning","most","mostly","mother","motion","motor","mountain","mouse","mouth","move","movement","movie","moving","mud","muscle","music","musical","must","my","myself","mysterious","nails","name","nation","national","native","natural","naturally","nature","near","nearby","nearer","nearest","nearly","necessary","neck","needed","needle","needs","negative","neighbor","neighborhood","nervous","nest","never","new","news","newspaper","next","nice","night","nine","no","nobody","nodded","noise","none","noon","nor","north","nose","not","note","noted","nothing","notice","noun","now","number","numeral","nuts","object","observe","obtain","occasionally","occur","ocean","of","off","offer","office","officer","official","oil","old","older","oldest","on","once","one","only","onto","open","operation","opinion","opportunity","opposite","or","orange","orbit","order","ordinary","organization","organized","origin","original","other","ought","our","ourselves","out","outer","outline","outside","over","own","owner","oxygen","pack","package","page","paid","pain","paint","pair","palace","pale","pan","paper","paragraph","parallel","parent","park","part","particles","particular","particularly","partly","parts","party","pass","passage","past","path","pattern","pay","peace","pen","pencil","people","per","percent","perfect","perfectly","perhaps","period","person","personal","pet","phrase","physical","piano","pick","picture","pictured","pie","piece","pig","pile","pilot","pine","pink","pipe","pitch","place","plain","plan","plane","planet","planned","planning","plant","plastic","plate","plates","play","pleasant","please","pleasure","plenty","plural","plus","pocket","poem","poet","poetry","point","pole","police","policeman","political","pond","pony","pool","poor","popular","population","porch","port","position","positive","possible","possibly","post","pot","potatoes","pound","pour","powder","power","powerful","practical","practice","prepare","present","president","press","pressure","pretty","prevent","previous","price","pride","primitive","principal","principle","printed","private","prize","probably","problem","process","produce","product","production","program","progress","promised","proper","properly","property","protection","proud","prove","provide","public","pull","pupil","pure","purple","purpose","push","put","putting","quarter","queen","question","quick","quickly","quiet","quietly","quite","rabbit","race","radio","railroad","rain","raise","ran","ranch","range","rapidly","rate","rather","raw","rays","reach","read","reader","ready","real","realize","rear","reason","recall","receive","recent","recently","recognize","record","red","refer","refused","region","regular","related","relationship","religious","remain","remarkable","remember","remove","repeat","replace","replied","report","represent","require","research","respect","rest","result","return","review","rhyme","rhythm","rice","rich","ride","riding","right","ring","rise","rising","river","road","roar","rock","rocket","rocky","rod","roll","roof","room","root","rope","rose","rough","round","route","row","rubbed","rubber","rule","ruler","run","running","rush","sad","saddle","safe","safety","said","sail","sale","salmon","salt","same","sand","sang","sat","satellites","satisfied","save","saved","saw","say","scale","scared","scene","school","science","scientific","scientist","score","screen","sea","search","season","seat","second","secret","section","see","seed","seeing","seems","seen","seldom","select","selection","sell","send","sense","sent","sentence","separate","series","serious","serve","service","sets","setting","settle","settlers","seven","several","shade","shadow","shake","shaking","shall","shallow","shape","share","sharp","she","sheep","sheet","shelf","shells","shelter","shine","shinning","ship","shirt","shoe","shoot","shop","shore","short","shorter","shot","should","shoulder","shout","show","shown","shut","sick","sides","sight","sign","signal","silence","silent","silk","silly","silver","similar","simple","simplest","simply","since","sing","single","sink","sister","sit","sitting","situation","six","size","skill","skin","sky","slabs","slave","sleep","slept","slide","slight","slightly","slip","slipped","slope","slow","slowly","small","smaller","smallest","smell","smile","smoke","smooth","snake","snow","so","soap","social","society","soft","softly","soil","solar","sold","soldier","solid","solution","solve","some","somebody","somehow","someone","something","sometime","somewhere","son","song","soon","sort","sound","source","south","southern","space","speak","special","species","specific","speech","speed","spell","spend","spent","spider","spin","spirit","spite","split","spoken","sport","spread","spring","square","stage","stairs","stand","standard","star","stared","start","state","statement","station","stay","steady","steam","steel","steep","stems","step","stepped","stick","stiff","still","stock","stomach","stone","stood","stop","stopped","store","storm","story","stove","straight","strange","stranger","straw","stream","street","strength","stretch","strike","string","strip","strong","stronger","struck","structure","struggle","stuck","student","studied","studying","subject","substance","success","successful","such","sudden","suddenly","sugar","suggest","suit","sum","summer","sun","sunlight","supper","supply","support","suppose","sure","surface","surprise","surrounded","swam","sweet","swept","swim","swimming","swing","swung","syllable","symbol","system","table","tail","take","taken","tales","talk","tall","tank","tape","task","taste","taught","tax","tea","teach","teacher","team","tears","teeth","telephone","television","tell","temperature","ten","tent","term","terrible","test","than","thank","that","thee","them","themselves","then","theory","there","therefore","these","they","thick","thin","thing","think","third","thirty","this","those","thou","though","thought","thousand","thread","three","threw","throat","through","throughout","throw","thrown","thumb","thus","thy","tide","tie","tight","tightly","till","time","tin","tiny","tip","tired","title","to","tobacco","today","together","told","tomorrow","tone","tongue","tonight","too","took","tool","top","topic","torn","total","touch","toward","tower","town","toy","trace","track","trade","traffic","trail","train","transportation","trap","travel","treated","tree","triangle","tribe","trick","tried","trip","troops","tropical","trouble","truck","trunk","truth","try","tube","tune","turn","twelve","twenty","twice","two","type","typical","uncle","under","underline","understanding","unhappy","union","unit","universe","unknown","unless","until","unusual","up","upon","upper","upward","us","use","useful","using","usual","usually","valley","valuable","value","vapor","variety","various","vast","vegetable","verb","vertical","very","vessels","victory","view","village","visit","visitor","voice","volume","vote","vowel","voyage","wagon","wait","walk","wall","want","war","warm","warn","was","wash","waste","watch","water","wave","way","we","weak","wealth","wear","weather","week","weigh","weight","welcome","well","went","were","west","western","wet","whale","what","whatever","wheat","wheel","when","whenever","where","wherever","whether","which","while","whispered","whistle","white","who","whole","whom","whose","why","wide","widely","wife","wild","will","willing","win","wind","window","wing","winter","wire","wise","wish","with","within","without","wolf","women","won","wonder","wonderful","wood","wooden","wool","word","wore","work","worker","world","worried","worry","worse","worth","would","wrapped","write","writer","writing","written","wrong","wrote","yard","year","yellow","yes","yesterday","yet","you","young","younger","your","yourself","youth","zero","zebra","zipper","zoo","zulu"];function Ie(l,e=4){let t=[];for(let r=0;r<e+0;++r){let n=r*(me.length/e),a=r+1*(me.length/e),i=l.random()*(a-n)+n|0,s=[...me[i]];s.unshift(s.shift().toUpperCase()),t.push(s.join(""))}return t}var se=class extends T{constructor(e){super("Rename",e);this.getVarPrefix=e=>{switch(e){case"FunctionName":return"func";case"Parameter":return"arg";default:return"var"}};this.getUpperScope=e=>{var r;let t=e.upper;if(!t||t.type==="global")return e;for(;((r=t==null?void 0:t.upper)==null?void 0:r.type)!=="global";)t=t==null?void 0:t.upper;return t};this.scopeVisitor=(e,t)=>{let r=new Map;if(!!this.getUpperScope(t)){for(let a of t.variables){if(a.name==="arguments")continue;let i=this.getVarPrefix(a.defs[0].type)+Ie(this.mt,2).join("");r.set(a.name,i);for(let s of a.defs){let o=V(e.ast,s.name.range,"Identifier");!o||(o.name=i)}for(let s of a.references){let o=V(e.ast,s.identifier.range,"Identifier");!o||(o.name=i)}a.name=i}for(let a of t.references){let i=V(e.ast,a.identifier.range,"Identifier");!i||r.has(i.name)&&(i.name=r.get(i.name))}}}}rename(e){return E(this,null,function*(){this.mt=new De.default(e.hash);for(let t of e.scopeManager.scopes)this.scopeVisitor(e,t);return this})}transform(e){return E(this,null,function*(){this.rename(e)})}};var Y=class{constructor(e,t,r){this.stringArray=[];this.stringDecoders=[];this.stringDecoderReferences=[];this.controlFlowStorageNodes={};this.removeGarbage=!0;this.enableLog=!0;this.hash=0;this.ast=e,this.transformers=this.buildTransformerList(t),this.source=r,this.scopeManager=Ce.analyze(this.ast,{})}log(e,...t){!this.enableLog||console.log(e,...t)}buildTransformerList(e){let t=[];for(let[r,n]of e)switch(r.toLowerCase()){case"controlflow":t.push(new Z(n));break;case"desequence":t.push(new ee(n));break;case"literalmap":t.push(new te(n));break;case"memberexpressioncleaner":t.push(new re(n));break;case"simplify":t.push(new z(n));break;case"stringdecoder":t.push(new ie(n));break;case"deadcode":t.push(new ne(n));break;case"demangle":t.push(new ae(n));break;case"arraymap":t.push(new oe(n));break;case"rename":t.push(new se(n));break;default:throw new TypeError(`Transformer "${r}" is invalid, it does not exist`)}return t}};var Le=H(require("prettier"));function _e(l){let e=2493774369,t=l.length;for(;t;)e=e*33^l.charCodeAt(--t);return e>>>0}var ge=class{constructor(){this.defaultOptions={ecmaVersion:"latest",transformChainExpressions:!0,customTransformers:[],rename:!1}}buildOptions(e={}){return _(_({},this.defaultOptions),e)}buildAcornOptions(e){return{ecmaVersion:e.ecmaVersion,ranges:!0}}deobfuscateNode(e,t){return E(this,null,function*(){let r=this.buildOptions(t),n=new Y(e,[["Simplify",{}],["MemberExpressionCleaner",{}],["LiteralMap",{}],["DeadCode",{}],["Demangle",{}],["StringDecoder",{}],["Simplify",{}],["MemberExpressionCleaner",{}],["Desequence",{}],["ControlFlow",{}],["Desequence",{}],["MemberExpressionCleaner",{}],["Simplify",{}],["DeadCode",{}],["Simplify",{}],["DeadCode",{}]]);for(let a of n.transformers)console.log("Running",a.name,"transformer"),yield a.transform(n);if(r.rename){let a=ye.default.generate(n.ast),i=le.parse(a,this.buildAcornOptions(r));n=new Y(i,[["Rename",{}]]),n.hash=_e(a);for(let s of n.transformers)console.log("(rename) Running",s.name,"transformer"),yield s.transform(n)}return n.ast})}deobfuscateSource(e,t){return E(this,null,function*(){let r=this.buildOptions(t),n=this.buildAcornOptions(r),a=le.parse(e,n);a=yield this.deobfuscateNode(a,r),e=ye.default.generate(a);try{e=Le.default.format(e,{semi:!1,singleQuote:!0,parser(i,s){let o=le.parse(i,n);return r.transformChainExpressions&&d(o,{ChainExpression(p){p.expression.type==="CallExpression"?y(p,pe(_({},p.expression),{type:"OptionalCallExpression",expression:void 0})):p.expression.type==="MemberExpression"&&y(p,pe(_({},p.expression),{type:"OptionalMemberExpression",expression:void 0}))}}),o}})}catch(i){console.log(i)}return e})}};module.exports=je($e);0&&(module.exports={Deobfuscator,Transformer});
